"use strict";(self.webpackChunkhfixers=self.webpackChunkhfixers||[]).push([[269],{7017:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return r}});var o=n(3366),a=(n(7294),n(4983)),l=["components"],i={publish:"no",title:"Tips and Tricks: Chrome Dev Tools",slug:"chrome-dev-tools-tips-and-tricks",date:"2020-10-29",author:"Adam Goth",preview:"I recently spent some time diving into all that Chrome's developer tools have to offer. It's quite impressive what the Chrome team has built to make the lives of web developers easier. In this post, I will share a handful of the nifty things I learned.",categories:"testcats1, testcats2",tags:"testtags1, testtags2",keywords:"one, two"},s={_frontmatter:i};function r(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.mdx)("wrapper",Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"I recently spent some time diving into all that Chrome’s developer tools have to\noffer. It’s quite impressive what the Chrome team has built to make the lives of\nweb developers easier. In this post, I will share a handful of the nifty things\nI learned."),(0,a.mdx)("p",null,"Let’s jump in."),(0,a.mdx)("h3",null,"Toggle the console drawer"),(0,a.mdx)("p",null,"Most people are probably familiar with the\n",(0,a.mdx)("a",{parentName:"p",href:"https://developers.google.com/web/tools/chrome-devtools/console/reference"},"Console"),"\ntab. But you can open a console drawer from almost any other tab as well. This\ncan easily be toggled by simply hitting the ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"esc")," key."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/C4nvLNDUimi984DvGl/giphy.gif",alt:"escape key console toggle"})),(0,a.mdx)("h3",null,"Toggle all nested elements"),(0,a.mdx)("p",null,"Clicking an element within the Elements tab will expand that particular element\nand show you any children elements belonging to it. Sometimes, elements can be\nnested several layers deep. By holding the ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"option")," key while clicking an\nelement, you can expand ",(0,a.mdx)("strong",{parentName:"p"},"all")," children nested within that element."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/UCsgJYqUDCVUEg0q63/giphy.gif",alt:"toggle all nested elements"})),(0,a.mdx)("h3",null,"Scroll element into view"),(0,a.mdx)("p",null,"Sometimes you may see an element with your Elements tab and wonder where exactly\nthat element lives on the page. Usually, you can see the element get highlighted\non the page as you hover it in the Elements tab, but sometimes the element is\nnot within the page view. If you right-click the element, you can choose the\n“Scroll into view” option and Chrome will do just that."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/JK74tuyVCAyDtLcXHq/giphy.gif",alt:"scroll into view"})),(0,a.mdx)("h3",null,"Toggle an element’s visibility"),(0,a.mdx)("p",null,"For whatever reason, you may want to toggle whether an element on your page can\nbe seen or not. This can easily be done by simply hitting the ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"h")," key while the\nelement is selected in the Elements tab."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/t0ylr2sHarOQA8xuuF/giphy.gif",alt:"h to toggle hidden element"})),(0,a.mdx)("h3",null,"Converting color formats"),(0,a.mdx)("p",null,"When viewing an element’s CSS ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"color")," property in dev tools, you can toggle\nbetween RGB, HSL, and hex color formats by holding the ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"shift")," key and clicking\nthe color square. This can be convenient in various situations where you may\nfind a color in one format, but need it in another."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/yZQQLiyyxVdkBjHLoO/giphy.gif",alt:"coverting color format"})),(0,a.mdx)("h3",null,"Access recently selected elements in console"),(0,a.mdx)("p",null,"Sometimes we need access to DOM elements in the console so that we can inspect\nvarious properties or behavior. Chrome provides a quick shortcut to access these\nelements within the console. If you type ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"$0")," into the console, you will get the\nelement you most recently interacted with in the Elements tab. If you type in\n",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"$1"),", you will get the second most recent element you interacted with, and so\nforth…"),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/Fbpduv3lSKZX6eu1N5/giphy.gif",alt:"most recent elements console access"})),(0,a.mdx)("h3",null,"Run commands"),(0,a.mdx)("p",null,"By pressing ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"command")," + ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"shift")," + ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"p"),", you can search dev tools for nearly\nanything and quickly\n",(0,a.mdx)("a",{parentName:"p",href:"https://developers.google.com/web/tools/chrome-devtools/command-menu"},"run various commands"),".\nThis gives you extremely quick access to many features of the dev tools. Give\nthis one a try, you may find something you didn’t know existed."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/diz6pCLIjt8O1hLNkK/giphy.gif",alt:"run commands"})),(0,a.mdx)("h3",null,"Blackbox scripts"),(0,a.mdx)("p",null,"Ever get stuck debugging in some random runtime file that you never wanted to be\nin?\n",(0,a.mdx)("a",{parentName:"p",href:"https://developer.chrome.com/devtools/docs/blackboxing"},"Blackboxing scripts")," is\nyour new friend. If there is a script that you do not want your debugger to go\ninto, you can right-click it and select “Blackbox script”. Easy enough."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/0QiT8USJ5inJFmxEF1/giphy.gif",alt:"blackbox scripts"})),(0,a.mdx)("h3",null,"Conditional breakpoints"),(0,a.mdx)("p",null,"If you have used the debugger in the dev tools before, you are likely aware that\nyou can set breakpoints to pause your code execution. In addition to your\nstandard breakpoint, Chrome allows you to also set\n",(0,a.mdx)("a",{parentName:"p",href:"https://developers.google.com/web/tools/chrome-devtools/javascript/breakpoints"},"conditional breakpoints"),".\nThis allows you to specify that a variable must have a certain value in order\nfor the breakpoint to hit. This can be very convenient when you are trying to\ndebug an issue where a particular value must be present. To set a conditional\nbreakpoint, right-click the line you want to set it at and click “Add\nconditional breakpoint…”"),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/n7oOV9shQmzJTDwkNt/giphy.gif",alt:"conditional breakpoint"})),(0,a.mdx)("h3",null,"Networking calls: Who called what?"),(0,a.mdx)("p",null,"Sometimes we see network calls in the\n",(0,a.mdx)("a",{parentName:"p",href:"https://developers.google.com/web/tools/chrome-devtools/network/reference"},"Network"),"\ntab and we’re not sure where they came from. Chrome has a neat trick that shows\nyou if one network call was initiated by another call and if that network call\nin turn has dependencies of its own. To take a look, simply hold ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"shift")," while\nhovering a network call. Initiators are colored green and dependencies are\ncolored red."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/fH8XjzbnTUDJGcHAJ4/giphy.gif",alt:"networking calls"})),(0,a.mdx)("h3",null,"Select multiple networking request types"),(0,a.mdx)("p",null,"If you are familiar with the Network tab, you are likely aware that you can\nselect a certain type of network request to filter your results, e.g. XHR. But\nmaybe you are interested in both XHR and JS requests. By holding ",(0,a.mdx)("code",{parentName:"p",className:"language-text"},"command")," and\nclicking different request types, you can select multiple types of requests at\nonce."),(0,a.mdx)("p",null,(0,a.mdx)("img",{parentName:"p",src:"https://media.giphy.com/media/C4SHhZBSYBKkMv4wrx/giphy.gif",alt:"multiple network request types"})),(0,a.mdx)("h3",null,"Wrapping up"),(0,a.mdx)("p",null,"The Chrome Dev Tools are seriously impressive. These tips are just the tip of\nthe iceberg. The deeper you dive into what features are available to you, the\nmore amazed you will be. The\n",(0,a.mdx)("a",{parentName:"p",href:"https://developers.google.com/web/tools/chrome-devtools"},"documentation")," is a\ngreat reference. If you are more of a visual learner, I would recommend the\n",(0,a.mdx)("a",{parentName:"p",href:"https://frontendmasters.com/courses/chrome-dev-tools/"},"Mastering Chrome Dev Tools"),"\non Frontend Masters by ",(0,a.mdx)("a",{parentName:"p",href:"https://twitter.com/jkup"},"Jon Kuperman"),"."),(0,a.mdx)("p",null,"Thanks for reading, I hope you learned something!"),(0,a.mdx)("p",null,"If you enjoyed this post or found it useful, please consider\n",(0,a.mdx)("a",{parentName:"p",href:"https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.adamgoth.com%2Ftips-and-tricks-chrome-dev-tools"},"sharing it on Twitter"),"."),(0,a.mdx)("p",null,"If you want to stay updated on new posts,\n",(0,a.mdx)("a",{parentName:"p",href:"https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252Finit_adam%26widget%3DButton&ref_src=twsrc%5Etfw&region=follow_link&screen_name=init_adam&tw_p=followbutton"},"follow me on Twitter"),"."),(0,a.mdx)("p",null,"If you have any questions, comments, or just want to say hello,\n",(0,a.mdx)("a",{parentName:"p",href:"https://twitter.com/messages/compose?recipient_id=33618361"},"send me a message"),"."),(0,a.mdx)("p",null,"Thanks for reading!"))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-b-tips-and-tricks-chrome-dev-tools-mdx-333ce1dc9c2ee9065616.js.map